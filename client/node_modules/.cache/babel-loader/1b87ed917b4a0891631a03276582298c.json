{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joonas\\\\lifetracker\\\\client\\\\src\\\\components\\\\AddSummary.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./AddSummary.css\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nconst statesArray = [{\n  tag: \"hit_the_sack\",\n  min: 20,\n  max: 28,\n  step: 1,\n  unit: \"\",\n  text: \"What time did you hit the sack last night?\"\n}, {\n  tag: \"wake_up\",\n  min: 5,\n  max: 15,\n  step: 1,\n  unit: \"\",\n  text: \"What time did you wake up today?\"\n}, {\n  tag: \"nicotine\",\n  min: 0,\n  max: 20,\n  step: 1,\n  unit: \"portions\",\n  text: \"How much nicotine did you consume today? (in portions)\"\n}, {\n  tag: \"excercise\",\n  min: 0,\n  max: 240,\n  step: 10,\n  unit: \"min\",\n  text: \"How much did you exercise today? (in minutes)\"\n}, {\n  tag: \"meditation\",\n  min: 0,\n  max: 60,\n  step: 5,\n  unit: \"min\",\n  text: \"How much did you meditate today? (in minutes)\"\n}, {\n  tag: \"mood\",\n  min: 0,\n  max: 10,\n  step: 1,\n  text: \"How was your overall mood throughout the day?\"\n}];\n\nconst AddSummary = () => {\n  const [userId, setUserId] = useState(\"\");\n  const [hit_the_sack, set_hit_the_sack] = useState(0);\n  const [wake_up, set_wake_up] = useState(0);\n  const [nicotine, setNicotine] = useState(0);\n  const [excersice, setExcercise] = useState(0);\n  const [meditation, setMeditation] = useState(0);\n  const [mood, setMood] = useState(0);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [exit, setExit] = useState(false);\n  const id = useSelector(state => state.userId);\n  useEffect(() => {\n    setUserId(id);\n  }, [id]);\n\n  const onChangeHandler = (e, object) => {\n    e.preventDefault();\n\n    switch (object) {\n      case \"hit_the_sack\":\n        set_hit_the_sack(e.target.value);\n        break;\n\n      case \"wake_up\":\n        set_wake_up(e.target.value);\n        break;\n\n      case \"nicotine\":\n        setNicotine(e.target.value);\n        break;\n\n      case \"excercise\":\n        setExcercise(e.target.value);\n        break;\n\n      case \"meditation\":\n        setMeditation(e.target.value);\n        break;\n\n      case \"mood\":\n        setMood(e.target.value);\n        break;\n\n      default:\n        return null;\n    }\n  };\n\n  const clickNext = () => {\n    if (currentIndex < statesArray.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  };\n\n  const clickBack = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    }\n  }; // is this even necessary of will it reset the state on rerender?\n\n\n  const clickExit = () => {\n    set_hit_the_sack(0);\n    set_wake_up(0);\n    setNicotine(0);\n    setExcercise(0);\n    setMeditation(0);\n    setMood(0);\n    setCurrentIndex(0);\n    setExit(true);\n  };\n\n  const clickSubmit = () => {\n    const newSummary = {\n      userId,\n      hit_the_sack,\n      wake_up,\n      nicotine,\n      excersice,\n      meditation,\n      mood,\n      date: Date.now()\n    };\n    axios.post(\"http://localhost:5000/summaries/add\", newSummary).then(res => console.log(res)).then(window.alert(\"Summary added !\")).then(() => {\n      setExit(true);\n    }).catch(err => console.log(\"Error : \" + err));\n  };\n\n  const getValue = () => {\n    let current = statesArray[currentIndex];\n    let _tag = current.tag;\n    let value;\n    let suffix = \"\";\n\n    switch (_tag) {\n      case \"hit_the_sack\":\n        value = hit_the_sack;\n        suffix = \":00\";\n        break;\n\n      case \"wake_up\":\n        value = wake_up;\n        suffix = \":00\";\n        break;\n\n      case \"nicotine\":\n        value = nicotine;\n        break;\n\n      case \"excercise\":\n        value = excersice;\n        break;\n\n      case \"meditation\":\n        value = meditation;\n        break;\n\n      case \"mood\":\n        value = mood;\n        break;\n\n      default:\n        break;\n    }\n\n    return {\n      current,\n      _tag,\n      value,\n      suffix\n    };\n  };\n\n  return exit ? React.createElement(Redirect, {\n    to: \"/home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"summary-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"exit-btn\",\n    onClick: clickExit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"X\"), React.createElement(\"div\", {\n    className: \"tag\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, getValue()._tag.toUpperCase().replace(/_/g, \" \")), React.createElement(\"div\", {\n    className: \"summary-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/\" + getValue()._tag + \".png\",\n    alt: \"icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \" \", getValue().current.text, \" \"), React.createElement(\"div\", {\n    className: \"value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, currentIndex === 0 ? getValue().value % 24 + getValue().suffix : getValue().value + getValue().suffix), React.createElement(\"div\", {\n    className: \"slider-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"range\",\n    min: getValue().current.min,\n    max: getValue().current.max,\n    value: getValue().value,\n    step: getValue().current.step,\n    onChange: e => onChangeHandler(e, getValue().current.tag),\n    className: \"slider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"back\",\n    onClick: clickBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, \"back\"), React.createElement(\"div\", {\n    className: \"next-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, currentIndex === statesArray.length - 1 ? React.createElement(\"button\", {\n    className: \"submit-btn\",\n    onClick: clickSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"submit\") : React.createElement(\"button\", {\n    className: \"next-btn\",\n    onClick: clickNext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, \"next\"))));\n};\n\nexport default AddSummary;","map":{"version":3,"sources":["C:/Users/Joonas/lifetracker/client/src/components/AddSummary.jsx"],"names":["React","useState","useEffect","axios","useSelector","Redirect","statesArray","tag","min","max","step","unit","text","AddSummary","userId","setUserId","hit_the_sack","set_hit_the_sack","wake_up","set_wake_up","nicotine","setNicotine","excersice","setExcercise","meditation","setMeditation","mood","setMood","currentIndex","setCurrentIndex","exit","setExit","id","state","onChangeHandler","e","object","preventDefault","target","value","clickNext","length","clickBack","clickExit","clickSubmit","newSummary","date","Date","now","post","then","res","console","log","window","alert","catch","err","getValue","current","_tag","suffix","toUpperCase","replace"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./AddSummary.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst statesArray = [\r\n  {\r\n    tag: \"hit_the_sack\",\r\n    min: 20,\r\n    max: 28,\r\n    step: 1,\r\n    unit: \"\",\r\n    text: \"What time did you hit the sack last night?\"\r\n  },\r\n  {\r\n    tag: \"wake_up\",\r\n    min: 5,\r\n    max: 15,\r\n    step: 1,\r\n    unit: \"\",\r\n    text: \"What time did you wake up today?\"\r\n  },\r\n  {\r\n    tag: \"nicotine\",\r\n    min: 0,\r\n    max: 20,\r\n    step: 1,\r\n    unit: \"portions\",\r\n    text: \"How much nicotine did you consume today? (in portions)\"\r\n  },\r\n  {\r\n    tag: \"excercise\",\r\n    min: 0,\r\n    max: 240,\r\n    step: 10,\r\n    unit: \"min\",\r\n    text: \"How much did you exercise today? (in minutes)\"\r\n  },\r\n  {\r\n    tag: \"meditation\",\r\n    min: 0,\r\n    max: 60,\r\n    step: 5,\r\n    unit: \"min\",\r\n    text: \"How much did you meditate today? (in minutes)\"\r\n  },\r\n  {\r\n    tag: \"mood\",\r\n    min: 0,\r\n    max: 10,\r\n    step: 1,\r\n    text: \"How was your overall mood throughout the day?\"\r\n  }\r\n];\r\n\r\nconst AddSummary = () => {\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [hit_the_sack, set_hit_the_sack] = useState(0);\r\n  const [wake_up, set_wake_up] = useState(0);\r\n  const [nicotine, setNicotine] = useState(0);\r\n  const [excersice, setExcercise] = useState(0);\r\n  const [meditation, setMeditation] = useState(0);\r\n  const [mood, setMood] = useState(0);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [exit, setExit] = useState(false);\r\n  const id = useSelector(state => state.userId);\r\n\r\n  useEffect(() => {\r\n    setUserId(id);\r\n  }, [id]);\r\n\r\n  const onChangeHandler = (e, object) => {\r\n    e.preventDefault();\r\n    switch (object) {\r\n      case \"hit_the_sack\":\r\n        set_hit_the_sack(e.target.value);\r\n        break;\r\n      case \"wake_up\":\r\n        set_wake_up(e.target.value);\r\n        break;\r\n      case \"nicotine\":\r\n        setNicotine(e.target.value);\r\n        break;\r\n      case \"excercise\":\r\n        setExcercise(e.target.value);\r\n        break;\r\n      case \"meditation\":\r\n        setMeditation(e.target.value);\r\n        break;\r\n      case \"mood\":\r\n        setMood(e.target.value);\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const clickNext = () => {\r\n    if (currentIndex < statesArray.length - 1) {\r\n      setCurrentIndex(currentIndex + 1);\r\n    }\r\n  };\r\n\r\n  const clickBack = () => {\r\n    if (currentIndex > 0) {\r\n      setCurrentIndex(currentIndex - 1);\r\n    }\r\n  };\r\n\r\n  // is this even necessary of will it reset the state on rerender?\r\n  const clickExit = () => {\r\n    set_hit_the_sack(0);\r\n    set_wake_up(0);\r\n    setNicotine(0);\r\n    setExcercise(0);\r\n    setMeditation(0);\r\n    setMood(0);\r\n    setCurrentIndex(0);\r\n    setExit(true);\r\n  };\r\n\r\n  const clickSubmit = () => {\r\n    const newSummary = {\r\n      userId,\r\n      hit_the_sack,\r\n      wake_up,\r\n      nicotine,\r\n      excersice,\r\n      meditation,\r\n      mood,\r\n      date: Date.now()\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/summaries/add\", newSummary)\r\n      .then(res => console.log(res))\r\n      .then(window.alert(\"Summary added !\"))\r\n      .then(() => {\r\n        setExit(true);\r\n      })\r\n      .catch(err => console.log(\"Error : \" + err));\r\n  };\r\n\r\n  const getValue = () => {\r\n    let current = statesArray[currentIndex];\r\n    let _tag = current.tag;\r\n    let value;\r\n    let suffix = \"\";\r\n\r\n    switch (_tag) {\r\n      case \"hit_the_sack\":\r\n        value = hit_the_sack;\r\n        suffix = \":00\";\r\n        break;\r\n      case \"wake_up\":\r\n        value = wake_up;\r\n        suffix = \":00\";\r\n        break;\r\n      case \"nicotine\":\r\n        value = nicotine;\r\n        break;\r\n      case \"excercise\":\r\n        value = excersice;\r\n        break;\r\n      case \"meditation\":\r\n        value = meditation;\r\n        break;\r\n      case \"mood\":\r\n        value = mood;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return {\r\n      current,\r\n      _tag,\r\n      value,\r\n      suffix\r\n    };\r\n  };\r\n\r\n  return exit ? (\r\n    <Redirect to=\"/home\" />\r\n  ) : (\r\n    <div>\r\n      <div className=\"summary-grid\">\r\n        <button className=\"exit-btn\" onClick={clickExit}>\r\n          X\r\n        </button>\r\n        <div className=\"tag\">\r\n          {getValue()\r\n            ._tag.toUpperCase()\r\n            .replace(/_/g, \" \")}\r\n        </div>\r\n        <div className=\"summary-icon\">\r\n          <img src={\"/\" + getValue()._tag + \".png\"} alt=\"icon\" />\r\n        </div>\r\n        <div className=\"description\"> {getValue().current.text} </div>\r\n        <div className=\"value\">\r\n          {currentIndex === 0\r\n            ? (getValue().value % 24) + getValue().suffix\r\n            : getValue().value + getValue().suffix}\r\n        </div>\r\n        <div className=\"slider-container\">\r\n          <input\r\n            type=\"range\"\r\n            min={getValue().current.min}\r\n            max={getValue().current.max}\r\n            value={getValue().value}\r\n            step={getValue().current.step}\r\n            onChange={e => onChangeHandler(e, getValue().current.tag)}\r\n            className=\"slider\"\r\n          />\r\n        </div>\r\n        <button className=\"back\" onClick={clickBack}>\r\n          back\r\n        </button>\r\n        <div className=\"next-container\">\r\n          {currentIndex === statesArray.length - 1 ? (\r\n            <button className=\"submit-btn\" onClick={clickSubmit}>\r\n              submit\r\n            </button>\r\n          ) : (\r\n            <button className=\"next-btn\" onClick={clickNext}>\r\n              next\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddSummary;\r\n"]},"metadata":{},"sourceType":"module"}