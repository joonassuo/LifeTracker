{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joonas\\\\lifetracker\\\\client\\\\src\\\\components\\\\history.graph.component.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport \"./History.css\";\n\nconst Graph = () => {\n  const id = useSelector(state => state.userId);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [wakeUp_d, setWakeUp_d] = useState([]);\n  const [goToBed_d, setGoToBed_d] = useState([]);\n  const [nicotine_d, setNicotine_d] = useState([]);\n  const [excersice_d, setExcersice_d] = useState([]);\n  const [meditation_d, setMeditation_d] = useState([]);\n  const [mood_d, setMood_d] = useState([]);\n\n  const makeDataStruct = (dates, data, label, color) => {\n    const res = {\n      labels: dates,\n      datasets: [{\n        data,\n        label,\n        backgroundColor: color\n      }]\n    };\n    return res;\n  };\n\n  var options = {\n    layout: {\n      padding: {\n        left: 30,\n        right: 40,\n        top: 40,\n        bottom: 0\n      }\n    },\n    legend: {\n      display: false\n    },\n    tooltips: {\n      callbacks: {\n        label: function (tooltipItem) {\n          console.log(tooltipItem);\n          return tooltipItem.yLabel;\n        }\n      }\n    },\n    elements: {\n      point: {\n        radius: 0\n      }\n    },\n    scales: {\n      xAxes: [{\n        gridLines: {\n          display: false\n        }\n      }],\n      yAxes: [{\n        gridLines: {\n          display: false\n        }\n      }]\n    }\n  };\n\n  const getData = data => {\n    var res = {\n      wake_up: [],\n      hit_the_sack: [],\n      nicotine: [],\n      excersice: [],\n      meditation: [],\n      mood: []\n    };\n\n    for (let i = 0; i < data.length; i++) {\n      res.wake_up.push(data[i].wake_up);\n      res.hit_the_sack.push(data[i].hit_the_sack);\n      res.nicotine.push(data[i].nicotine);\n      res.excersice.push(data[i].excersice);\n      res.meditation.push(data[i].meditation);\n      res.mood.push(data[i].mood);\n    }\n\n    return res;\n  };\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/summaries\").then(res => {\n      const d = res.data.filter(el => {\n        return el.userId === id;\n      });\n      return d;\n    }).then(res => {\n      const colors = [\"rgba(37, 142, 166, 1)\", \"rgba(84, 159, 147, 1)\", \"rgba(159, 175, 144, 1)\", \"rgba(226, 177, 177, 1)\", \"rgba(226, 194, 255, 1)\", \"rgba(37, 142, 166, 1)\"];\n      const dates = [];\n      res.forEach(e => {\n        dates.push(e.date.substr(5, 5));\n      });\n      const data = getData(res);\n      setWakeUp_d(makeDataStruct(dates, data.wake_up, \"Wake Up\", colors[0]));\n      setGoToBed_d(makeDataStruct(dates, data.hit_the_sack, \"Go to Bed\", colors[1]));\n      setNicotine_d(makeDataStruct(dates, data.nicotine, \"Nicotine\", colors[2]));\n      setExcersice_d(makeDataStruct(dates, data.excersice, \"Excersice\", colors[3]));\n      setMeditation_d(makeDataStruct(dates, data.meditation, \"Meditation\", colors[4]));\n      setMood_d(makeDataStruct(dates, data.mood, \"Mood\", colors[5]));\n    }).then(() => {\n      setIsLoaded(true);\n    }).catch(err => console.log(err));\n  }, [id]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chart-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, isLoaded ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"GO TO BED\"), React.createElement(Line, {\n    data: goToBed_d,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"WAKE UP\"), React.createElement(Line, {\n    data: wakeUp_d,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"NICOTINE\"), React.createElement(Line, {\n    data: nicotine_d,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"EXCERSICE\"), React.createElement(Line, {\n    data: excersice_d,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"MEDITATION\"), React.createElement(Line, {\n    data: meditation_d,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"MOOD\"), React.createElement(Line, {\n    data: mood_d,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Loading\")));\n};\n\nexport default Graph;","map":{"version":3,"sources":["C:/Users/Joonas/lifetracker/client/src/components/history.graph.component.jsx"],"names":["React","useState","useEffect","useSelector","Line","axios","Graph","id","state","userId","isLoaded","setIsLoaded","wakeUp_d","setWakeUp_d","goToBed_d","setGoToBed_d","nicotine_d","setNicotine_d","excersice_d","setExcersice_d","meditation_d","setMeditation_d","mood_d","setMood_d","makeDataStruct","dates","data","label","color","res","labels","datasets","backgroundColor","options","layout","padding","left","right","top","bottom","legend","display","tooltips","callbacks","tooltipItem","console","log","yLabel","elements","point","radius","scales","xAxes","gridLines","yAxes","getData","wake_up","hit_the_sack","nicotine","excersice","meditation","mood","i","length","push","get","then","d","filter","el","colors","forEach","e","date","substr","catch","err"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport \"./History.css\";\r\n\r\nconst Graph = () => {\r\n\tconst id = useSelector(state => state.userId);\r\n\tconst [isLoaded, setIsLoaded] = useState(false);\r\n\r\n\tconst [wakeUp_d, setWakeUp_d] = useState([]);\r\n\tconst [goToBed_d, setGoToBed_d] = useState([]);\r\n\tconst [nicotine_d, setNicotine_d] = useState([]);\r\n\tconst [excersice_d, setExcersice_d] = useState([]);\r\n\tconst [meditation_d, setMeditation_d] = useState([]);\r\n\tconst [mood_d, setMood_d] = useState([]);\r\n\r\n\tconst makeDataStruct = (dates, data, label, color) => {\r\n\t\tconst res = {\r\n\t\t\tlabels: dates,\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\tdata,\r\n\t\t\t\t\tlabel,\r\n\t\t\t\t\tbackgroundColor: color\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\t\treturn res;\r\n\t};\r\n\r\n\tvar options = {\r\n\t\tlayout: {\r\n\t\t\tpadding: {\r\n\t\t\t\tleft: 30,\r\n\t\t\t\tright: 40,\r\n\t\t\t\ttop: 40,\r\n\t\t\t\tbottom: 0\r\n\t\t\t}\r\n\t\t},\r\n\t\tlegend: {\r\n\t\t\tdisplay: false\r\n\t\t},\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\tlabel: function(tooltipItem) {\r\n\t\t\t\t\tconsole.log(tooltipItem);\r\n\t\t\t\t\treturn tooltipItem.yLabel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\telements: {\r\n\t\t\tpoint: {\r\n\t\t\t\tradius: 0\r\n\t\t\t}\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\txAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\tdisplay: false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tyAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\tdisplay: false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t};\r\n\r\n\tconst getData = data => {\r\n\t\tvar res = {\r\n\t\t\twake_up: [],\r\n\t\t\thit_the_sack: [],\r\n\t\t\tnicotine: [],\r\n\t\t\texcersice: [],\r\n\t\t\tmeditation: [],\r\n\t\t\tmood: []\r\n\t\t};\r\n\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tres.wake_up.push(data[i].wake_up);\r\n\t\t\tres.hit_the_sack.push(data[i].hit_the_sack);\r\n\t\t\tres.nicotine.push(data[i].nicotine);\r\n\t\t\tres.excersice.push(data[i].excersice);\r\n\t\t\tres.meditation.push(data[i].meditation);\r\n\t\t\tres.mood.push(data[i].mood);\r\n\t\t}\r\n\t\treturn res;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\"http://localhost:5000/summaries\")\r\n\t\t\t.then(res => {\r\n\t\t\t\tconst d = res.data.filter(el => {\r\n\t\t\t\t\treturn el.userId === id;\r\n\t\t\t\t});\r\n\t\t\t\treturn d;\r\n\t\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tconst colors = [\r\n\t\t\t\t\t\"rgba(37, 142, 166, 1)\",\r\n\t\t\t\t\t\"rgba(84, 159, 147, 1)\",\r\n\t\t\t\t\t\"rgba(159, 175, 144, 1)\",\r\n\t\t\t\t\t\"rgba(226, 177, 177, 1)\",\r\n\t\t\t\t\t\"rgba(226, 194, 255, 1)\",\r\n\t\t\t\t\t\"rgba(37, 142, 166, 1)\"\r\n\t\t\t\t];\r\n\t\t\t\tconst dates = [];\r\n\t\t\t\tres.forEach(e => {\r\n\t\t\t\t\tdates.push(e.date.substr(5, 5));\r\n\t\t\t\t});\r\n\t\t\t\tconst data = getData(res);\r\n\r\n\t\t\t\tsetWakeUp_d(\r\n\t\t\t\t\tmakeDataStruct(dates, data.wake_up, \"Wake Up\", colors[0])\r\n\t\t\t\t);\r\n\t\t\t\tsetGoToBed_d(\r\n\t\t\t\t\tmakeDataStruct(\r\n\t\t\t\t\t\tdates,\r\n\t\t\t\t\t\tdata.hit_the_sack,\r\n\t\t\t\t\t\t\"Go to Bed\",\r\n\t\t\t\t\t\tcolors[1]\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\tsetNicotine_d(\r\n\t\t\t\t\tmakeDataStruct(dates, data.nicotine, \"Nicotine\", colors[2])\r\n\t\t\t\t);\r\n\t\t\t\tsetExcersice_d(\r\n\t\t\t\t\tmakeDataStruct(\r\n\t\t\t\t\t\tdates,\r\n\t\t\t\t\t\tdata.excersice,\r\n\t\t\t\t\t\t\"Excersice\",\r\n\t\t\t\t\t\tcolors[3]\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\tsetMeditation_d(\r\n\t\t\t\t\tmakeDataStruct(\r\n\t\t\t\t\t\tdates,\r\n\t\t\t\t\t\tdata.meditation,\r\n\t\t\t\t\t\t\"Meditation\",\r\n\t\t\t\t\t\tcolors[4]\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\tsetMood_d(makeDataStruct(dates, data.mood, \"Mood\", colors[5]));\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tsetIsLoaded(true);\r\n\t\t\t})\r\n\t\t\t.catch(err => console.log(err));\r\n\t}, [id]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"chart-container\">\r\n\t\t\t\t{isLoaded ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p className=\"legend\">GO TO BED</p>\r\n\t\t\t\t\t\t<Line data={goToBed_d} options={options} />\r\n\t\t\t\t\t\t<p className=\"legend\">WAKE UP</p>\r\n\t\t\t\t\t\t<Line data={wakeUp_d} options={options} />\r\n\t\t\t\t\t\t<p className=\"legend\">NICOTINE</p>\r\n\t\t\t\t\t\t<Line data={nicotine_d} options={options} />\r\n\t\t\t\t\t\t<p className=\"legend\">EXCERSICE</p>\r\n\t\t\t\t\t\t<Line data={excersice_d} options={options} />\r\n\t\t\t\t\t\t<p className=\"legend\">MEDITATION</p>\r\n\t\t\t\t\t\t<Line data={meditation_d} options={options} />\r\n\t\t\t\t\t\t<p className=\"legend\">MOOD</p>\r\n\t\t\t\t\t\t<Line data={mood_d} options={options} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div>Loading</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Graph;\r\n"]},"metadata":{},"sourceType":"module"}