{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joonas\\\\lifetracker\\\\client\\\\src\\\\components\\\\Signup.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './Signup.css';\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeEmail = e => {\n      e.preventDefault();\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.onChangeUsername = e => {\n      e.preventDefault();\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.onChangePassword = e => {\n      e.preventDefault();\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.onChangePasswordConfirm = e => {\n      e.preventDefault();\n      this.setState({\n        passwordConfirm: e.target.value\n      });\n    };\n\n    this.onChangeCreationDate = date => {\n      date.preventDefault();\n      this.setState({\n        creationDate: date\n      });\n    };\n\n    this.validateData = () => {\n      let password = document.getElementById(\"s-password\");\n      let confirm = document.getElementById(\"s-confirm\");\n      let username = document.getElementById(\"s-username\");\n      let email = document.getElementById(\"s-email\");\n      let errorMessage = document.getElementById(\"error-message\");\n\n      if (this.state.password.length < 6) {\n        password.value = '';\n        confirm.value = '';\n        errorMessage.innerHTML = 'Password should be at least 6 characters';\n        return false;\n      } else if (this.state.password !== this.state.passwordConfirm) {\n        password.value = '';\n        confirm.value = '';\n        errorMessage.innerHTML = \"Passwords don't match\";\n      } else if (this.state.username.length < 3) {\n        username.value = '';\n        errorMessage.innerHTML = \"Username should be at least 3 characters\";\n      } else if (this.state.usersArray.includes(this.state.username)) {\n        username.value = '';\n        errorMessage.innerHTML = \"Username already exists\";\n      } else if (this.state.emailsArray.includes(this.state.email)) {\n        email.value = '';\n        errorMessage.innerHTML = \"An account with given email already exists\";\n      } else {\n        errorMessage.innerHTML = \"\";\n        return true;\n      }\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n\n      if (this.validateData() === true) {\n        const newUser = {\n          email: this.state.email,\n          username: this.state.username,\n          password: this.state.password,\n          creationDate: this.state.creationDate\n        };\n        console.log(newUser);\n        axios.post('http://localhost:5000/users/add', newUser).then(res => console.log(res.data)).catch(() => console.log('Error!')).then(() => window.location = '/');\n      }\n    };\n\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeCreationDate = this.onChangeCreationDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validateData = this.validateData.bind(this);\n    this.state = {\n      email: '',\n      username: '',\n      password: '',\n      passwordConfirm: '',\n      creationDate: new Date(),\n      usersArray: [],\n      emailsArray: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/users').then(res => {\n      this.setState({\n        usersArray: res.data.map(user => user.username),\n        emailsArray: res.data.map(email => email.email)\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signup-screen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"s-grid-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"s-logo-container fullwidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"/logo.png\",\n      alt: \"\",\n      id: \"s-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"s-email-container fullwidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"s-email\",\n      type: \"text\",\n      placeholder: \"Email\",\n      onChange: this.onChangeEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"s-username-container fullwidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"s-username\",\n      type: \"text\",\n      placeholder: \"Username\",\n      onChange: this.onChangeUsername,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"s-password-container fullwidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"s-password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: this.onChangePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"s-confirm-container fullwidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"s-confirm\",\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      onChange: this.onChangePasswordConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"error-message\",\n      className: \"grid-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"s-signup-button-container fullwidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"s-signup-button\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"SIGNUP\")))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Joonas/lifetracker/client/src/components/Signup.js"],"names":["React","Component","axios","Signup","constructor","props","onChangeEmail","e","preventDefault","setState","email","target","value","onChangeUsername","username","onChangePassword","password","onChangePasswordConfirm","passwordConfirm","onChangeCreationDate","date","creationDate","validateData","document","getElementById","confirm","errorMessage","state","length","innerHTML","usersArray","includes","emailsArray","onSubmit","newUser","console","log","post","then","res","data","catch","window","location","bind","Date","componentDidMount","get","map","user","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './Signup.css';\r\n\r\nexport default class Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onChangeCreationDate = this.onChangeCreationDate.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateData = this.validateData.bind(this);\r\n\r\n        this.state = {\r\n            email: '',\r\n            username: '',\r\n            password: '',\r\n            passwordConfirm: '',\r\n            creationDate: new Date(),\r\n            usersArray: [],\r\n            emailsArray: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/users')\r\n            .then(res => {\r\n                this.setState({\r\n                    usersArray: res.data.map(user => user.username),\r\n                    emailsArray: res.data.map(email => email.email)\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    onChangeEmail = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeUsername = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePasswordConfirm = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            passwordConfirm: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeCreationDate = (date) => {\r\n        date.preventDefault();\r\n        this.setState({\r\n            creationDate: date\r\n        });\r\n    }\r\n\r\n    validateData = () => {\r\n        let password = document.getElementById(\"s-password\");\r\n        let confirm = document.getElementById(\"s-confirm\");\r\n        let username = document.getElementById(\"s-username\");\r\n        let email = document.getElementById(\"s-email\");\r\n        let errorMessage = document.getElementById(\"error-message\");\r\n\r\n        if (this.state.password.length < 6) {\r\n            password.value = '';\r\n            confirm.value = '';\r\n            errorMessage.innerHTML = 'Password should be at least 6 characters';\r\n            return false;\r\n        } else if (this.state.password !== this.state.passwordConfirm) {\r\n            password.value = '';\r\n            confirm.value = '';\r\n            errorMessage.innerHTML = \"Passwords don't match\";\r\n        } else if (this.state.username.length < 3) {\r\n            username.value = '';\r\n            errorMessage.innerHTML = \"Username should be at least 3 characters\";\r\n        } else if (this.state.usersArray.includes(this.state.username)){\r\n            username.value = '';\r\n            errorMessage.innerHTML = \"Username already exists\";\r\n        } else if (this.state.emailsArray.includes(this.state.email)){\r\n            email.value = '';\r\n            errorMessage.innerHTML = \"An account with given email already exists\";\r\n        } else {\r\n            errorMessage.innerHTML = \"\";\r\n            return true;\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.validateData() === true) {\r\n            const newUser = {\r\n                email: this.state.email,\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n                creationDate: this.state.creationDate\r\n            }\r\n            console.log(newUser);\r\n            axios.post('http://localhost:5000/users/add', newUser)\r\n                .then(res => console.log(res.data))\r\n                .catch(() => console.log('Error!'))\r\n                .then(() => window.location = '/')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"signup-screen\">\r\n                    <div className=\"s-grid-container\">\r\n                        <div className=\"s-logo-container fullwidth\">\r\n                            <img src=\"/logo.png\" alt=\"\" id=\"s-logo\"/>\r\n                        </div>\r\n                        <div className=\"s-email-container fullwidth\">\r\n                            <input \r\n                                id=\"s-email\"\r\n                                type=\"text\"\r\n                                placeholder=\"Email\"\r\n                                onChange={this.onChangeEmail}/>\r\n                        </div>\r\n                        <div className=\"s-username-container fullwidth\">\r\n                            <input \r\n                                id=\"s-username\"\r\n                                type=\"text\"\r\n                                placeholder=\"Username\"\r\n                                onChange={this.onChangeUsername}/>\r\n                        </div>\r\n                        <div className=\"s-password-container fullwidth\">\r\n                            <input\r\n                                id=\"s-password\"\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={this.onChangePassword}/>\r\n                        </div>\r\n                        <div className=\"s-confirm-container fullwidth\">\r\n                            <input \r\n                                id=\"s-confirm\"\r\n                                type=\"password\"\r\n                                placeholder=\"Confirm Password\"\r\n                                onChange={this.onChangePasswordConfirm}/>\r\n                        </div>\r\n                        <div id=\"error-message\" className=\"grid-center\"></div>\r\n                        <div className=\"s-signup-button-container fullwidth\"> \r\n                            <button id=\"s-signup-button\" onClick={this.onSubmit}>\r\n                                SIGNUP\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}